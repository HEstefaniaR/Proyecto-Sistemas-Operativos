- name: Instalar y configurar nginx, Grafana y Prometheus
  hosts: localhost
  become: yes
  connection: local

  tasks:
    - name: Actualizar paquetes
      apt:
        update_cache: yes

    - name: Instalar dependencias
      apt:
        name:
          - curl
          - software-properties-common
        state: present

    - name: Instalar nginx
      apt:
        name: nginx
        state: latest
        update_cache: yes

    - name: Instalar Prometheus
      apt:
        name: prometheus
        state: present

    - name: Iniciar y habilitar nginx
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Iniciar y habilitar Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: yes

    - name: Añadir la clave GPG oficial de Grafana
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Añadir el repositorio oficial de Grafana
      ansible.builtin.apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present
        filename: grafana

    - name: Actualizar la cache de paquetes
      ansible.builtin.apt:
        update_cache: yes

    - name: Instalar Grafana
      apt:
        name: grafana
        state: present

    - name: Iniciar y habilitar Grafana
      systemd:
        name: grafana-server
        state: started
        enabled: yes

    - name: Configurar archivo de default para nginx
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;

              root /var/www/html;
              index index.html index.htm;

              server_name _;

              location / {
                  try_files $uri $uri/ =404;
              }

              location /nginx_status {
                  stub_status;
                  allow 127.0.0.1;
                  deny all;
              }
          }
        owner: root
        group: root
        mode: '0644'

    - name: Crear página de inicio simple
      copy:
        dest: /var/www/html/index.html
        content: "<h1>Servidor NGINX funcionando</h1>"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Asegurar que UFW esté habilitado
      ufw:
        state: enabled

    - name: Configurar firewall para Grafana, Prometheus y NGINX
      ufw:
        rule: allow
        port: "{{ item }}"
      loop:
        - 80
        - 3000
        - 9090

    - name: Reiniciar servicios para aplicar configuración
      systemd:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - prometheus
        - grafana-server

    - name: Descargar nginx-prometheus-exporter
      get_url:
        url: https://github.com/nginx/nginx-prometheus-exporter/releases/download/v1.4.2/nginx-prometheus-exporter_1.4.2_linux_amd64.tar.gz
        dest: /tmp/nginx-prometheus-exporter.tar.gz

    - name: Extraer nginx-prometheus-exporter
      unarchive:
        src: /tmp/nginx-prometheus-exporter.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover ejecutable nginx-prometheus-exporter a /usr/local/bin
      command: mv /tmp/nginx-prometheus-exporter /usr/local/bin/nginx-prometheus-exporter
      args:
        removes: /tmp/nginx-prometheus-exporter

    - name: Crear servicio systemd para nginx-prometheus-exporter
      copy:
        dest: /etc/systemd/system/nginx-exporter.service
        content: |
          [Unit]
          Description=NGINX Prometheus Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/nginx-prometheus-exporter --nginx.scrape-uri=http://127.0.0.1/nginx_status
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Habilitar e iniciar nginx-exporter
      systemd:
        name: nginx-exporter.service
        enabled: yes
        daemon_reload: yes
        state: started

    - name: Configurar Prometheus con job para nginx-exporter
      copy:
        src: provisioning/prometheus.yml
        dest: /etc/prometheus/prometheus.yml
        owner: prometheus
        group: prometheus
        mode: '0644'

    - name: Reiniciar Prometheus para cargar nueva configuración
      systemd:
        name: prometheus
        state: restarted
    
    - name: Verificar estado del servicio nginx-exporter
      systemd:
        name: nginx-exporter.service
      register: exporter_status

    - name: Mostrar estado del servicio nginx-exporter
      debug:
        msg: "nginx-exporter está activo: {{ exporter_status.status.ActiveState == 'active' }}"

    - name: Verificar que nginx-exporter responde en el puerto por defecto (9113)
      uri:
        url: http://localhost:9113/metrics
        return_content: yes
      register: exporter_response
      failed_when: "'nginx_connections_active' not in exporter_response.content"

    - name: Mostrar confirmación de que nginx-exporter devuelve métricas
      debug:
        msg: "nginx-exporter está funcionando y devuelve métricas correctamente."
